[
  {
    "uniq": 2,
    "id": 2,
    "slug": "dev-practices",
    "vote-jujhar": true,
    "vote-david": null,
    "vote-ben": true,
    "category": "Dev Practices",
    "title": "Feature Coverage",
    "description": "What proportion of the features are covered by a test",
    "high_score": "Every one of our features has at least one test",
    "low_score": "Less than 25% of our features have corresponding tests",
    "more_info_link": null,
    "important": true,
    "seq": true,
    "notes": null
  },
  {
    "uniq": 3,
    "id": 3,
    "slug": "dev-practices",
    "vote-jujhar": true,
    "vote-david": null,
    "vote-ben": null,
    "category": "Dev Practices",
    "title": "Unplanned Work",
    "description": "How much unplanned work do you have and how do you handle it",
    "high_score": "We have very little unplanned work and have spare capacity to handle any that comes in",
    "low_score": "More than half our work in any given sprint is unplanned",
    "more_info_link": null,
    "important": null,
    "seq": true,
    "notes": null
  },
  {
    "uniq": 6,
    "id": 6,
    "slug": "dev-practices",
    "vote-jujhar": true,
    "vote-david": null,
    "vote-ben": null,
    "category": "Dev Practices",
    "title": "Spend on Operability",
    "description": "What proportion of product budget and team effort is spent on operational aspects? How do you track this?",
    "high_score": "We spend our 30% of our time and budget on addressing operational aspects?",
    "low_score": "We try to spend as little as possible on operational aspects / we do not track spend on operational aspects?",
    "more_info_link": null,
    "important": null,
    "seq": true,
    "notes": null
  },
  {
    "uniq": 7,
    "id": 7,
    "slug": "dev-practices",
    "vote-jujhar": true,
    "vote-david": null,
    "vote-ben": null,
    "category": "Dev Practices",
    "title": "Testability",
    "description": "How do we show that the software system is easy to test? What do we provide and to whom?",
    "high_score": "We run clients and external test packs against all parts of our software within our development pipeline.",
    "low_score": "We do not explicitly aim to make our software easily testable.",
    "more_info_link": null,
    "important": null,
    "seq": true,
    "notes": null
  },
  {
    "uniq": 10,
    "id": 10,
    "slug": "dev-practices",
    "vote-jujhar": true,
    "vote-david": null,
    "vote-ben": null,
    "category": "Dev Practices",
    "title": "Other Code",
    "description": "How confident are you in the code from other internal teams that you depend on",
    "high_score": "We are confident in our colleagues code, their docs are clear and coverage is rock solid",
    "low_score": "Code from other teams is really flakey and we have to reach out often to try and understand their interfaces",
    "more_info_link": null,
    "important": null,
    "seq": true,
    "notes": null
  },
  {
    "uniq": 11,
    "id": 11,
    "slug": "dev-practices",
    "vote-jujhar": true,
    "vote-david": null,
    "vote-ben": true,
    "category": "Dev Practices",
    "title": "Test First",
    "description": "What proportion of the time you spend on writing code is spent on writing tests",
    "high_score": "We use a test first approach all the time and spend ~80% of our coding time writing our tests",
    "low_score": "We often do not have time to write tests",
    "more_info_link": null,
    "important": true,
    "seq": true,
    "notes": null
  },
  {
    "uniq": 17,
    "id": 17,
    "slug": "dev-practices",
    "vote-jujhar": true,
    "vote-david": null,
    "vote-ben": true,
    "category": "Dev Practices",
    "title": "Documentation",
    "description": "How good are your docs? How trusted are they?",
    "high_score": "Our docs are updated regularly and are accurate",
    "low_score": "Documentation is poor, out of date or non-existant",
    "more_info_link": null,
    "important": true,
    "seq": true,
    "notes": null
  },
  {
    "uniq": 19,
    "id": 19,
    "slug": "dev-practices",
    "vote-jujhar": true,
    "vote-david": null,
    "vote-ben": true,
    "category": "Dev Practices",
    "title": "QA and Confidence",
    "description": "How easy is it to provide confidence that the changes that are made are correct (technically and functionally)",
    "high_score": "We have multiple assurance steps of differing types run in multiple environments as part of our CI & CD processes",
    "low_score": "\"We only have basic unit or \"\"integration tests\"\" in place\"",
    "more_info_link": null,
    "important": true,
    "seq": null,
    "notes": null
  },
  {
    "uniq": 20,
    "id": 20,
    "slug": "dev-practices",
    "vote-jujhar": true,
    "vote-david": null,
    "vote-ben": true,
    "category": "Dev Practices",
    "title": "Linting and Code Quality",
    "description": "How good are your code quality and PR standards?",
    "high_score": "We have documented, automated and enforced code quality and linting standards.\nWe have a PR template that should be followed otherwise your PRs are rejected.\nWe have a structured git-branch standard that relates back to the ticket.\nOur have good discipline around our commit messages.\"",
    "low_score": "We don't have linting standards\nOur PR descriptions are poor or non-existent",
    "more_info_link": null,
    "important": true,
    "seq": null,
    "notes": null
  },
  {
    "uniq": 23,
    "id": 1,
    "slug": "observability",
    "vote-jujhar": true,
    "vote-david": null,
    "vote-ben": true,
    "category": "Observability",
    "title": "Feature Toggles Observability",
    "description": "How do we know which feature toggles are active for a deployments?",
    "high_score": "We have a simple UI or API to see what's on in which environment",
    "low_score": "We track things manually on paper or in our heads",
    "more_info_link": null,
    "important": true,
    "seq": true,
    "notes": null
  },
  {
    "uniq": 27,
    "id": 5,
    "slug": "observability",
    "vote-jujhar": true,
    "vote-david": null,
    "vote-ben": true,
    "category": "Observability",
    "title": "System Health",
    "description": "How do we know that the system is healthy (or unhealthy)?",
    "high_score": "We query the software using a standard http healthcheck URL and synthetic transactions for key scenarios",
    "low_score": "We wait for checks made manually by another team to tell us if our software is healthy",
    "more_info_link": null,
    "important": true,
    "seq": true,
    "notes": null
  },
  {
    "uniq": 28,
    "id": 6,
    "slug": "observability",
    "vote-jujhar": true,
    "vote-david": null,
    "vote-ben": null,
    "category": "Observability",
    "title": "Service Status",
    "description": "How do we display the current service/system status to ops teams and business stakeholders",
    "high_score": "We build a dashboard in collaboration with the operations and business teams. UX is a key consideration",
    "low_score": "Operations teams tend to discover the status indicators themselves",
    "more_info_link": null,
    "important": null,
    "seq": true,
    "notes": null
  },
  {
    "uniq": 32,
    "id": 4,
    "slug": "deployments",
    "vote-jujhar": true,
    "vote-david": null,
    "vote-ben": null,
    "category": "Deployments",
    "title": "Rerun tests",
    "description": "What would happen if we decided to rerun the test suite multiple times",
    "high_score": "No worries",
    "low_score": "We donâ€™t know what would happen, the test suite is flakey",
    "more_info_link": null,
    "important": null,
    "seq": true,
    "notes": null
  },
  {
    "uniq": 37,
    "id": 9,
    "slug": "deployments",
    "vote-jujhar": true,
    "vote-david": null,
    "vote-ben": null,
    "category": "Deployments",
    "title": "Environment History",
    "description": "It should be possible to clearly see a history and log of changes made to our environments",
    "high_score": "We have a nice dashboard of deployments and their impact",
    "low_score": "It is difficult to see the history of changes in an environment",
    "more_info_link": null,
    "important": true,
    "seq": true,
    "notes": null
  },
  {
    "uniq": 40,
    "id": 2,
    "slug": "availability",
    "vote-jujhar": true,
    "vote-david": null,
    "vote-ben": null,
    "category": "Availability",
    "title": "Service KPIs/SLOs",
    "description": "How do we track the main service/system Key Performance Indicators (KPIs) or Service Level Objectives (SLOs)? What are the KPIs/SLOs?",
    "high_score": "We emit service KPIs/SLIs for each of our components that are picked up by a dashboard/alerting mechanism.  We review and optimise for them constantly",
    "low_score": "We do not have Service KPIs/SLOs defined",
    "more_info_link": null,
    "important": null,
    "seq": true,
    "notes": null
  },
  {
    "uniq": 42,
    "id": 4,
    "slug": "availability",
    "vote-jujhar": true,
    "vote-david": null,
    "vote-ben": null,
    "category": "Availability",
    "title": "Observability",
    "description": "How much observability do you have on your systems environments, inputs, outputs and behaviour. Do you have enough information on how your system runs to make improvements/solve problems?",
    "high_score": "Just the basics you get for free from Cloudwatch, an on-server agent, htop, task manager etc.",
    "low_score": "Max Instrumentation and SLO driven dashboards",
    "more_info_link": null,
    "important": true,
    "seq": true,
    "notes": null
  },
  {
    "uniq": 43,
    "id": 5,
    "slug": "availability",
    "vote-jujhar": true,
    "vote-david": null,
    "vote-ben": null,
    "category": "Availability",
    "title": "Run without you",
    "description": "If all of your team took some time off, how long would your systems keep running without you?",
    "high_score": "Our prod env will run for weeks without interference and self-heal",
    "low_score": "Everything will fall on it's face within a day without our heroics",
    "more_info_link": null,
    "important": null,
    "seq": true,
    "notes": null
  },
  {
    "uniq": 45,
    "id": 2,
    "slug": "culture",
    "vote-jujhar": true,
    "vote-david": null,
    "vote-ben": true,
    "category": "Culture",
    "title": "Low friction processes",
    "description": "Do you feel that the processes are suitable for you to deliver software cotinuously",
    "high_score": "The whole thing is a well oiled machine, everybody is in their groove and we barely feel any friction. The processes help us to do the right thing",
    "low_score": "The processes are painful, too numerous and makes us cry",
    "more_info_link": null,
    "important": true,
    "seq": true,
    "notes": null
  },
  {
    "uniq": 46,
    "id": 3,
    "slug": "culture",
    "vote-jujhar": true,
    "vote-david": null,
    "vote-ben": true,
    "category": "Culture",
    "title": "Psychological Safety",
    "description": "How safe do you feel to raise concerns",
    "high_score": "Our concerns are valued and used to help improve the team and org",
    "low_score": "If we raise concerns we are ignored or could get in trouble",
    "more_info_link": null,
    "important": true,
    "seq": true,
    "notes": null
  },
  {
    "uniq": 48,
    "id": 5,
    "slug": "culture",
    "vote-jujhar": true,
    "vote-david": null,
    "vote-ben": true,
    "category": "Culture",
    "title": "Management style",
    "description": "How effective and appropriate are the approaches by management and other senior stakeholders",
    "high_score": "The management approaches help us to deliver rapidly and safely",
    "low_score": "The management approach really hamper our efforts",
    "more_info_link": null,
    "important": true,
    "seq": true,
    "notes": null
  },
  {
    "uniq": 51,
    "id": 8,
    "slug": "culture",
    "vote-jujhar": true,
    "vote-david": null,
    "vote-ben": true,
    "category": "Culture",
    "title": "Speed",
    "description": "How rapidly do you work as a team?",
    "high_score": "We deliver work rapidly together",
    "low_score": "We seem to take a long time to get things done",
    "more_info_link": null,
    "important": true,
    "seq": true,
    "notes": null
  },
  {
    "uniq": 53,
    "id": 10,
    "slug": "culture",
    "vote-jujhar": true,
    "vote-david": null,
    "vote-ben": null,
    "category": "Culture",
    "title": "Learning",
    "description": "How much do you learn as a team?",
    "high_score": "We learn something every day",
    "low_score": "We rarely learn something new",
    "more_info_link": null,
    "important": null,
    "seq": true,
    "notes": null
  },
  {
    "uniq": 59,
    "id": 16,
    "slug": "culture",
    "vote-jujhar": true,
    "vote-david": null,
    "vote-ben": null,
    "category": "Culture",
    "title": "Onboarding",
    "description": "How easy is it to onboard members to your team and make them productive",
    "high_score": "New team members can spin up a environment quickly and commit to production < 3 weeks",
    "low_score": "It can take a few months before a team member can actively contribute\n\nIt takes a long time to discover all the codebases and environments",
    "more_info_link": null,
    "important": true,
    "seq": null,
    "notes": null
  },
  {
    "uniq": 60,
    "id": 17,
    "slug": "culture",
    "vote-jujhar": true,
    "vote-david": null,
    "vote-ben": null,
    "category": "Culture",
    "title": "Growth",
    "description": "Have you grown in your profession since you joined <org>?\nHow easy is it to find clear and visible ways to help you progress in your discipline",
    "high_score": "I have given enough opportunity to explore different things\nI felt I have grown a lot since I joined <org>.\nThere are enough support forums to help me progress.\nI have been mentored many times by others.\nThere is a culture of giving feedback.",
    "low_score": "I don't get to do interesting tasks\nI don't see clear paths of progression\nI feel I am stuck",
    "more_info_link": null,
    "important": null,
    "seq": null,
    "notes": null
  },
  {
    "uniq": 62,
    "id": 19,
    "slug": "culture",
    "vote-jujhar": true,
    "vote-david": null,
    "vote-ben": null,
    "category": "Culture",
    "title": "Focus time",
    "description": "\"How much time in a typical day do you get to be \"\"in the zone\"\"?\"",
    "high_score": "About half a day\nI am encouraged to and get to set aside focus time everyday",
    "low_score": "I am in and out of meetings the entire day\nI am made to attend meetings that I don't need to be in\nI am bombarded with ad-hoc requests from other teams",
    "more_info_link": null,
    "important": null,
    "seq": null,
    "notes": null
  },
  {
    "uniq": 63,
    "id": 1,
    "slug": "tech",
    "vote-jujhar": true,
    "vote-david": null,
    "vote-ben": null,
    "category": "Tech",
    "title": "Tech quality",
    "description": "How healthy is the code base?",
    "high_score": "Our code base is clean, safe to use and well-tested",
    "low_score": "Our code base is piled with workarounds and danger areas",
    "more_info_link": null,
    "important": null,
    "seq": true,
    "notes": null
  },
  {
    "uniq": 67,
    "id": 5,
    "slug": "tech",
    "vote-jujhar": true,
    "vote-david": null,
    "vote-ben": null,
    "category": "Tech",
    "title": "Stubs",
    "description": "Simulate external systems. Treat almost every other system as 'external'",
    "high_score": "The stubs we consume and write are good quality and give us a degree of confidence that our tests are working well.",
    "low_score": "There are few stubs available and we do noot have enough time to write stubs ourselves.",
    "more_info_link": null,
    "important": null,
    "seq": true,
    "notes": null
  },
  {
    "uniq": 69,
    "id": 7,
    "slug": "tech",
    "vote-jujhar": true,
    "vote-david": null,
    "vote-ben": true,
    "category": "Tech",
    "title": "Performance",
    "description": "How do we know that the system/service performs within acceptable ranges?",
    "high_score": "We run a set of indicative performances tests within our deployment pipeline that are run on every check-in to version control.",
    "low_score": "We rely solely on the performance team to validate the performance of our application or service.",
    "more_info_link": null,
    "important": true,
    "seq": true,
    "notes": null
  },
  {
    "uniq": 76,
    "id": 5,
    "slug": "flow",
    "vote-jujhar": true,
    "vote-david": null,
    "vote-ben": null,
    "category": "Flow",
    "title": "Cycle Time",
    "description": "How long does it take for a code change to go from version control to running in Production? (Minimum, Typical)",
    "high_score": "1 Hour or Less",
    "low_score": "2 Weeks or More",
    "more_info_link": null,
    "important": null,
    "seq": true,
    "notes": null
  },
  {
    "uniq": 77,
    "id": 6,
    "slug": "flow",
    "vote-jujhar": true,
    "vote-david": null,
    "vote-ben": null,
    "category": "Flow",
    "title": "Failed Changes",
    "description": "What proportion of changes to your application or service in Production fail or need remediation? (This is typically the number of failed deployments)",
    "high_score": "Less than 5% of our changes / deployments fail in Production",
    "low_score": "More than 20% of our changes / deployments fail in Production",
    "more_info_link": null,
    "important": null,
    "seq": true,
    "notes": null
  },
  {
    "uniq": 79,
    "id": 8,
    "slug": "flow",
    "vote-jujhar": true,
    "vote-david": null,
    "vote-ben": null,
    "category": "Flow",
    "title": "Deployment Frequency",
    "description": "How often does your team deploy to Production?",
    "high_score": "Every 2 days or less",
    "low_score": "Every 2 weeks or longer in practice",
    "more_info_link": null,
    "important": true,
    "seq": true,
    "notes": null
  }
]
